name: pull-request

on:
  pull_request:
    types:
      - opened # default
      - synchronize # default
      - reopened # default
      - closed
    branches:
      - master

jobs:
  merge:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: prepare release tag
        run: echo "release_tag=v$(date '+%Y%m%d_%H%M%S')" >> $GITHUB_ENV
      - uses: actions/github-script@v5
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `PR has been merged. we're processing it! (${new Date()})`
            })
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.release_tag }}
          release_name: Release ${{ env.release_tag }}
          body: "${{github.event.pull_request.body}}"
          draft: false
          prerelease: false
      - uses: actions/github-script@v5
        env:
          release_url: "${{ steps.set-result.create_release.html_url }}"
          release_id: "${{ steps.set-result.create_release.id }}"
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `[draft release ${process.env.release_id}](${process.env.release_url}) has been created. (${new Date()})`
            })

  pull_request:
    if: github.event.pull_request.merged != true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: pull-request open
        run: |
          echo "Pull Request"
