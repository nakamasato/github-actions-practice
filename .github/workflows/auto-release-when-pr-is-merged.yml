name: auto-release-when-pr-is-merged

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  draft-release:
    if: ${{ github.event.pull_request.merged == true && ! contains( github.event.pull_request.labels.*.name, 'release') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: prepare release tag
        run: echo "release_tag=v$(date '+%Y%m%d_%H%M%S')" >> $GITHUB_ENV
      - uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `PR has been merged. we're processing it! (${new Date()})`
            })

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1 # not maintained
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.release_tag }}
          release_name: Release ${{ env.release_tag }}
          body: |
            This release is automatically created by [GitHub Actions draft-release.yml](https://github.com/nakamasato/github-actions-practice/blob/master/.github/workflows/draft-release.yml).
            Triggered PR: [${{ github.event.number }}:${{ github.event.pull_request.title }}](${{ github.event.pull_request.html_url }})
          draft: true
          prerelease: false

      - uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `[release ${{ steps.release.outputs.latest_version }}](${{ steps.release.outputs.html_url }}) has been created. (${new Date()})`
            })

  release:
    if: ${{ github.event.pull_request.merged == true && contains( github.event.pull_request.labels.*.name, 'release') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main

      - uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `PR has been merged. we're publishing a new release! (${new Date()})`
            })

      - name: release
        id: release
        run: |
          ./.publish-release.sh
          latest_version=$(gh release list -L 1 | cut -f1)
